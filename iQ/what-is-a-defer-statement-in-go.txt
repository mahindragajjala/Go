what-is-a-defer-statement-in-go.txt

In Go (Golang), a defer statement is used to ensure that a function call is executed after the surrounding function returns, regardless of 
how the function exitsâ€”whether normally, by a return statement, or via a panic.

Key Characteristics:
                    Executed in LIFO Order: If multiple defer statements are used, they are executed in Last-In-First-Out (LIFO) order.

Common Use Cases:
                Closing files
                Unlocking a mutex
                Logging function exit
                Releasing network connections or resources
                                                                    import (
                                                                    	"fmt"
                                                                    	"os"
                                                                    )
                                                                    
                                                                    func readFile() {
                                                                    	file, err := os.Open("example.txt")
                                                                    	if err != nil {
                                                                    		fmt.Println(err)
                                                                    		return
                                                                    	}
                                                                    	defer file.Close()  // Ensures the file is closed when the function returns
                                                                    	// process file...
                                                                    }
