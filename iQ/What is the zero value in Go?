what is the zero value in the golang ?

In Go (Golang), the zero value is the default value assigned to a variable when it is declared without an explicit initial value. 
This ensures that variables in Go are always initialized, even if you don’t assign anything explicitly.

Why Does Go Have Zero Values?
Go emphasizes simplicity and safety. One of its key philosophies is to avoid uninitialized variables, which can lead to undefined behavior. 
So when you write:   var x int


You don’t get garbage or random memory content. Instead, x is automatically set to the zero value for the int type, which is 0.

| Type Category | Type Examples             | Zero Value                       |
| ------------- | ------------------------- | -------------------------------- |
| Numeric Types | `int`, `int64`, `float32` | `0`, `0.0`                       |
| Boolean       | `bool`                    | `false`                          |
| String        | `string`                  | `""` (empty string)              |
| Pointers      | `*int`, `*MyStruct`       | `nil`                            |
| Interfaces    | `interface{}`             | `nil`                            |
| Channels      | `chan int`                | `nil`                            |
| Functions     | `func()`                  | `nil`                            |
| Slices        | `[]int`                   | `nil`                            |
| Maps          | `map[string]int`          | `nil`                            |
| Arrays        | `[3]int`                  | All elements are zero value      |
| Structs       | `struct`                  | All fields get their zero values |


+--------------------+--------------+-------------------------+
| Variable Name      | Type         | Memory Representation   |
+--------------------+--------------+-------------------------+
| var i int          | int          | [ 0 0 0 0 ]             |
| var f float64      | float64      | [ 0.0 0.0 ]             |
| var b bool         | bool         | [ false ]               |
| var s string       | string       | [ "" (empty string) ]   |
| var p *int         | pointer      | [ nil ]                 |
| var arr [3]int     | array        | [ 0 | 0 | 0 ]           |
| var sl []int       | slice        | [ nil ]                 |
| var m map[string]int | map        | [ nil ]                 |
| var ch chan int    | channel      | [ nil ]                 |
| var fn func()      | function     | [ nil ]                 |
+--------------------+--------------+-------------------------+
